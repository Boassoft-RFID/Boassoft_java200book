0JNBOVYA:1: 	package kr.co.infopub.chapter.s144;
0GABVETE:2: 	public class SubmergeLands {
0SYOBEVW:3: 	 private char[] pass = {'a','b','c','d','e','f','g','h','i','j','k','l','m','o','p','q','r','s','t','u','v','w','x','y','z'}; 
0TLLKNNX:4: 	 private int d=0;
0KMQBRMP:5: 	 public SubmergeLands(int d) {
0ILCVVGW:6: 		this.d = d;
0EBJBUFL:7: 	 }
0KPDXFOT:8: 	 public int toNum(char a){
0MMNLSQE:9: 	     if(Character.isDigit(a)){
AGLJROB:10: 			 return a-'0';
MPQOXXH:11: 		 }else return 0;
LSVEKUU:12: 	 }
JQGPDZQ:13: 	 public  int findApart(char region[][] , int x, int y, char step, int depth){
OAZHFEO:14: 		int count=0;
AFIGBGW:15: 		int right=region.length;
HLNGTNP:16: 		int bottom=region[0].length;
WSZREGC:17: 		if (x < 0 || x >= bottom || y < 0 || y >= right || toNum(region[y][x]) <6) {
HPXDLRE:18: 			return 0;
SSAGFYR:19: 		}
WMQVXNN:20: 		region[y][x] = pass[depth % pass.length];// 0~9를 반복 표시 침수지를 세는 과정
SOSWMZN:21: 	    count = 1 + findApart(region, x, y - 1, step, depth + 1)
DZSOFYJ:22: 	          + findApart(region, x + 1, y, step, depth + 1)
TKVKMYQ:23: 	          + findApart(region, x, y + 1, step, depth + 1)
VXIQQKD:24: 	          + findApart(region, x - 1, y, step, depth + 1);
MUVCUGH:25: 	    if(d>0){  // 대각선도 같은 침수지로 인정
NPZJMAC:26: 	    	  count+= findApart(region, x + 1, y - 1, step, depth + 1)   
HINXDCC:27: 	    	  + findApart(region, x + 1, y + 1, step, depth + 1)
VXDYWAJ:28: 	    	  + findApart(region, x - 1, y + 1, step, depth + 1)
WBNOJPL:29: 	    	  + findApart(region, x - 1, y - 1, step, depth + 1);
ALCVEZX:30: 	    }
LVKDQPC:31: 	    region[y][x] = step;
ZROOVIP:32: 	    print(region);
UFEESVF:33: 	    return count;
BULCVEA:34: 	 }
WOTZRDT:35: 	 public static void print(char c[][]){
VLSJVGR:36: 		for (int i = 0; i < c.length; i++) {
KZGOLKU:37: 			for (int j = 0; j < c[i].length; j++) {
VYWQQCC:38: 				System.out.printf("%c",c[i][j]);
YREXBUG:39: 			}
DGPMONL:40: 			System.out.println();
YYEJEGE:41: 		}
MVJDYRO:42: 		System.out.println("---------------------");
DJFZCPF:43: 	 }
HTEKLOJ:44: 	 public static void main(String[] args) {
GLAHDRL:45: 		 int d=0;  //d=0 대각선 인정-같은 침수지, 대각선 불인정 d=1-다른 침수지
NQTQLZT:46: 		 SubmergeLands apt=new SubmergeLands(d);
ZJCSXZS:47: 	//	 char region[][]={ 
EVOBXWU:48: 	//				  { '2','7','8'},
EJXNYPJ:49: 	//				  { '5','6','4'},
NEJAAPI:50: 	//				  { '8','5','9'}
KGDYCOP:51: 	//				  };
BFDHOMB:52: 		  char region[][]={ // 강우량 분포 - 6이상의 침수된다고 가정
IMYUEXQ:53: 				  { '2','3','2','3','4','3','0','0'},
DUZSQDB:54: 				  { '4','5','3','4','5','8','0','0'},
ISQLKEF:55: 				  { '6','6','4','5','6','7','0','0'},
YXSDJEX:56: 				  { '8','5','5','6','7','6','3','4'},
DTOTGBS:57: 				  { '9','7','6','7','8','3','5','5'},
THMAMVF:58: 				  { '3','8','7','8','6','2','3','6'},
SSWPJRQ:59: 				  { '5','9','8','9','5','1','6','7'},
CBTVFKA:60: 				  { '7','3','9','7','4','0','7','8'}
XXDUVYB:61: 				  };
DDGANEW:62: 		  int right=region.length;
WNXOETZ:63: 		  int bottom=region[0].length;
YTNADQE:64: 		  int count=0;
ETKTDIM:65: 		  char steps[] = new char[26];   //A침수지, B침수지, .... 26침수지 이하
JDSVYNM:66: 		  for (int i = 0; i < steps.length; i++) {
OSZOGEM:67: 			steps[i]=(char)('A'+i);
KEILOIL:68: 		  }
IEPMATL:69: 		  int []sizes=new int[bottom*right];  //침수지 내 침수지 수
SXVDJOJ:70: 		  int blocknums=0;  //침수지 수
CFLVDSO:71: 		  for (int iy = 0; iy < right; ++iy){
HUQADVK:72: 			    for (int ix = 0; ix < bottom; ++ix) {
JVRYYEC:73: 			         count = apt.findApart(region, ix, iy, steps[blocknums], 0);
CSOHLWK:74: 				     if (count>0) {
WPZHZCK:75: 					    sizes[blocknums++] = count;
XGSGZCW:76: 				     }
NQAFPBN:77: 				}
RQGLUIO:78: 		  }
NWHQZWL:79: 		  System.out.printf("침수지 단지= %d (number)\n", blocknums);
CDFTSCQ:80: 		  for (int ix = 0; ix < blocknums; ++ix){
DCXGNDR:81: 			  System.out.printf("%c 침수지 단지  = 침수지 %d (number)\n", steps[ix], sizes[ix]);
SBTRBWR:82: 		  }
KFTTYGG:83: 	 }
GDQYAGO:84: 	}
