0QGTQAXI:1: 	package kr.co.infopub.chapter.s106;
0IMUUYVK:2: 	import java.util.ArrayList;
0TVISMOO:3: 	import java.util.Collections;
0NRXJUPW:4: 	import java.util.List;
0ZXSFROJ:5: 	public class CardCase {
0YJOPDEE:6: 		// aggregation : CardCase는 Card로 구성된다.
0WFDOSKA:7: 		private List<Card> cards=new ArrayList<Card>();
0GLKYKNA:8: 		public CardCase() {
0CKDSMRU:9: 			cards.clear(); // 내용 지우기
IMHEZLP:10: 		}
FPSJMUH:11: 		// List 반환
ZWIXMGL:12: 		public List<Card> getCards() {
NSSZRNG:13: 			return cards;
DPNEITA:14: 		}
EEVMPKX:15: 		// List에 저장된 Card의 개수
MWDWSAN:16: 		public int count(){
SLYOHAT:17: 			return cards.size(); // 저장된 Card 개수
BJGVJOX:18: 		}
OSJWDYB:19: 		// List의 index번째 Card
ADHKKND:20: 		public Card getCard(int index){
VXWMYVE:21: 			return cards.get(index);  // index번째 Card
IJQXWJB:22: 		}
IIRIRSQ:23: 		// 서로 다른 카드 20장 만들기
BJIRXZG:24: 		public void make(){
QLSTIAJ:25: 			cards.clear(); // 내용 지우기
TDMVCRE:26: 			int suit=CardUtil.SUIT.length; // 0~1
YUOYONH:27: 			int valu=CardUtil.VALU.length; // 0~9
VFEYNHE:28: 			int count=0;
TGTOSNG:29: 			//서로 다른 20개의 카드를 만든다.
QCUURBZ:30: 			while(count!=valu*suit){    // 20장이 될 때까지
QLQYYZG:31: 				Card c=new Card();      // 임의의 카드를 만든다
PBYURFK:32: 				if(!cards.contains(c)){ // contains -> equals()를 이용해 비교
MWTSZAQ:33: 					cards.add(c);       // 같은 객체가 아니라면 저장
KJSTXJN:34: 					count++;
SDFIEHC:35: 				}
RJDWCMN:36: 			}
HBSGUTT:37: 		}
FRVXEBS:38: 		// 카드 섞기
DETBTHF:39: 		public void shuffle(){
DHZEPBF:40: 			Collections.shuffle(cards); // 카드 섞기
WPJNCEH:41: 		}
DOVVXSK:42: 	
PAVAFAY:43: 		public void print(){
JIXMJQM:44: 			int valu=CardUtil.VALU.length;
NDUYBLE:45: 			for (int i = 0; i < cards.size(); i++) {
QFLJYLX:46: 				Card c=cards.get(i);
JAHXTHV:47: 				System.out.printf("%s ",c.toString());
ROTEGPB:48: 				if((i+1)%valu==0){
FSHXQCZ:49: 					System.out.println();
ZAMFRKN:50: 				}
YVJHLEH:51: 			}
XPUZURP:52: 		}
DLURKTA:53: 	}//
