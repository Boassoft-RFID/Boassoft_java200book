00KVGMXUA:1: 	package kr.co.infopub.chapter.s150;
00LWSHGGK:2: 	public class FifteenPuzzle {
00JQMLCWG:3: 	 private int [][] puzzle;
00SGLJCAS:4: 	 private int n;
00PISGETG:5: 	 public FifteenPuzzle(int n) {
00XUDFNNR:6: 		init(n);
00FOXRFEP:7: 	 }
00ZFLDWUY:8: 	 public FifteenPuzzle() {
00SGAQHPA:9: 		this(4);
0KTJOBRM:10: 	 }
0ZGJYJBB:11: 	 public void init(int n){
0PTQMMJW:12: 		this.n=n;
0XCDSBSN:13: 		puzzle=new int[n][n];
0BDBQIRP:14: 		for (int i = 0; i <n*n ; i++) {
0BVTFEDV:15: 			puzzle[i/n][i%n]=i;
0INXNLCJ:16: 		}//0~n*n-1
0YGVJJQO:17: 	 }
0JXFYIYN:18: 	 public int getPuzzle(int r, int c){
0OJSTDEG:19: 		return puzzle[r][c];
0ENDDHHM:20: 	 }
0IDYTDFF:21: 	 private int num(){
0KNUQJQD:22: 		int row=puzzle.length;
0CCACHET:23: 		return (int)((row*row)*Math.random());
0RRVBAJQ:24: 	 }
0HWHAXWV:25: 	 public void shuffle(){
0RYSSCNS:26: 		int row=puzzle.length;
0PZXTCYZ:27: 		int col=puzzle[0].length;
0YBYESDN:28: 		int [] sh=new int[row*col];
0TUKQDGH:29: 		FifteenPuzzleUtil.toTwoOne(puzzle, sh);
0JZTVIRW:30: 		for (int i = 0; i < sh.length; i++) {
0ZLVMQRV:31: 			int temp=num();
0WIZCQSV:32: 			int mtemp=sh[i];
0RGKTGXP:33: 			sh[i]=sh[temp];
0WMSZDQX:34: 			sh[temp]=mtemp;
0BUWGVLB:35: 		}
0CWFLBXX:36: 		FifteenPuzzleUtil.toOneTwo(sh, puzzle);
0CACWZTT:37: 	 }
0UBDDIHW:38: 	 private int invertnumber(){
0MLSUKKE:39: 		int row=puzzle.length;
0EEAGKET:40: 		int col=puzzle[0].length;
0VTBQEYU:41: 		int [] sh=new int[row*col];
0CNWMFAC:42: 		int location=0;
0WYDTBMA:43: 		FifteenPuzzleUtil.toTwoOne(puzzle, sh);
0PNSREQP:44: 		for (int i = 0; i < sh.length; i++) {
0CLOBPQP:45: 			if(sh[i]==0){location=i;break;}
0EKSSPMW:46: 		}
0VYCCRIA:47: 		int ivn=0;
0YAPZMBF:48: 		for (int i = 0; i < sh.length-1; i++) {
0KGUJGIL:49: 			for (int j = i+1; j < sh.length; j++) {
0XEHVMCW:50: 				if(i!=location && j!=location && sh[i]>sh[j] ){
0HTMMDBV:51: 					ivn++;
0ZDNYLNW:52: 				}
0OOIWUBK:53: 			}
0WRYXFPR:54: 		}
0NJSLYAL:55: 		return ivn;
0KUUTVRV:56: 	 }//
0SZPWPKY:57: 	 private int zero(){
0LWBNJBA:58: 		int row=puzzle.length;
0FEFUKIP:59: 		int col=puzzle[0].length;
0SOEYZOP:60: 		int [] sh=new int[row*col];
0FHGSEIT:61: 		FifteenPuzzleUtil.toTwoOne(puzzle, sh);
0HJTVUHA:62: 		int znum=0;
0OOSIYKV:63: 		for (int i = 0; i < sh.length; i++) {
0PEGDOBT:64: 			if(sh[i]==0){
0DHRFIBQ:65: 				znum=i/col;
0FJBXQCM:66: 				break;
0ERKJKOP:67: 			}
0GXGLVXV:68: 		}
0RSWFGGB:69: 		return znum;
0GMTVHHP:70: 	 }
0SLAQZAC:71: 	 public int evenpuzle(){
0URXBNCN:72: 		int num=0;
0OQNILAN:73: 		int invert=invertnumber();
0EDZHEMT:74: 		num+=invert;
0IPGBVSX:75: 		num+=puzzle.length;
0IBDQQFG:76: 		num+=zero();
0JVMGYDV:77: 		return num;
0HUJHGXA:78: 	 }
0WNYIPTW:79: 	 public void makePuzzle(boolean show){
0FINZARO:80: 		int num=0;
0MJKLCNE:81: 		do{
0EKBPYII:82: 			shuffle();
0SLHRKDG:83: 			num=evenpuzle();
0NPYQJKS:84: 			if(show){
0KLAHVVJ:85: 				if(puzzle.length%2==0 && num%2==1){ //홀수면 가능
0HZXLROO:86: 					System.out.println("Even Possible Middle!");
0AEJWTRI:87: 					System.out.printf("Row  : %d \n", puzzle.length);
0LAOVEHV:88: 					System.out.printf("IVN  : %d \n", invertnumber());
0HEWJQJN:89: 					System.out.printf("Zero : %d \n", zero());
0AKKUIRG:90: 					System.out.printf("TOT  : %d \n", num);
0OBIWGSI:91: 					System.out.println("---------------------------");
0PCNZMZR:92: 				}else if(puzzle.length%2==0){
0RRMMXLH:93: 					System.out.println("Even Impossible Middle!");
0OUXBPGY:94: 					System.out.printf("Row  : %d \n", puzzle.length);
0IYBYGUQ:95: 					System.out.printf("IVN  : %d \n", invertnumber());
0BIFPOWO:96: 					System.out.printf("Zero : %d \n", zero());
0MMYAFXT:97: 					System.out.printf("TOT  : %d \n", num);
0PDJPUID:98: 					print();
0GKUWLVA:99: 					System.out.println("---------------------------");
ASDZZYA:100: 				}
PHKSFXM:101: 			}
IATUIZP:102: 		}while((puzzle.length+num)%2==0);
HPWLDXO:103: 	 }
BVYMHLC:104: 	 public void print(){
PKCDMLU:105: 		int n=puzzle.length;
WUGNBLQ:106: 		for (int i = 0; i < n; i++) {
RHWHYYZ:107: 			for (int j = 0; j <n; j++) {
VZOHFJH:108: 				System.out.printf("%2d\t",puzzle[i][j]);
KSSVYRS:109: 			}
NNNGNIK:110: 			System.out.println();
KSSRZYA:111: 		}
VFJYURT:112: 		System.out.println();
CSHXKTO:113: 	 }
OCTGCJD:114: 	 // 테스트용 생성자
MSQVDWY:115: 	 public FifteenPuzzle(int [][] pz) {
QDCLQYB:116: 		this.n=pz.length;
DJBUANB:117: 		init(n);
UONTREL:118: 		for (int i = 0; i < n; i++) {
SWLPGSH:119: 			for (int j = 0; j <n; j++) {
INUURHP:120: 				puzzle[i][j]=pz[i][j];
HHXYLDV:121: 			}
WTSDWQH:122: 		}
ZHINVKW:123: 	 }
KAGIZAE:124: 	 // 테스트 메서드
KOFFMTV:125: 	 public void testPuzzles(){
AUNEIMO:126: 		int num=evenpuzle();
SQGOTYY:127: 		if(puzzle.length%2==0 && num%2==1){//홀수면 가능
THPMVLS:128: 			System.out.println("Even Possible Middle!");
BEJFIHR:129: 			System.out.printf("Row  : %d \n", puzzle.length);
ALRGMRR:130: 			System.out.printf("IVN  : %d \n", invertnumber());
PSRBHXZ:131: 			System.out.printf("Zero : %d \n", zero());
HALLPZZ:132: 			System.out.printf("TOT  : %d \n", num);
UCYFUES:133: 			System.out.println("---------------------------");
GKMPGWK:134: 		}else if(puzzle.length%2==0){
CREEACL:135: 			System.out.println("Even Impossible Middle!");
FMSXWFH:136: 			System.out.printf("Row  : %d \n", puzzle.length);
BIQWQWF:137: 			System.out.printf("IVN  : %d \n", invertnumber());
CJORQEE:138: 			System.out.printf("Zero : %d \n", zero());
JBFWKDY:139: 			System.out.printf("TOT  : %d \n", num);
DWQDKEM:140: 			System.out.println("---------------------------");
UKGHRCU:141: 		}
EPSXKZY:142: 	 }
KHUULIH:143: 	}//
